;           _____ ______ 
;     /\   / ____|  ____|
;    /  \ | |    | |__   
;   / /\ \| |    |  __|  
;  / ____ \ |____| |____ 
; /_/    \_\_____|______|
;                        
; Alert Correlation Engine
;
; unittest configuration
;

[global]
company_name = default
company_id = 1
instance_name = local1
node = localhost
instance_type = UNITTEST
error_reporting_email = ace@localhost
local_domains = localdomain
local_email_domains = localdomain,company.com
fp_days = 0
data_dir = data_unittest
log_sql = no

[monitor]
use_stdout = no
use_stderr = no
use_logging = no
use_cache = no

[network_configuration]
managed_networks = 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

[SSL]
ca_chain_path = ssl/ca-chain-combined.cert.pem

[SLA]
enabled = no
time_to_dispo = 4

[SLA_dlp]
property = alert_type
value = dlp-exit-alert
time_to_dispo = 36

[proxy]
transport = 
host = 
port = 
user = 
password = 

[api]
ssl_cert = ssl/ace.cert.pem
ssl_key = ssl/ace.key.pem

# listen on a different port since apache already has 443 taken (most likely)
listen_port = 24443
prefix = localhost:24443

api_key = dcef0db0-556f-44b3-9e1b-3d97b435d264

[gui]
ssl_cert = ssl/ace.cert.pem
ssl_key = ssl/ace.key.pem
base_uri = https://localhost:5000/ace
default_company_id = 1
core_companies = 1

[client]
uri =

[cloudphish]
cache_dir = cloudphish_unittest

[database_ace]
hostname = ace-db
unix_socket =
database = ace-unittest
username = ace-user
password = env:ACE_DB_PASSWORD

[database_collection]
hostname = ace-db
unix_socket =
database = ace-unittest
username = ace-user
password = env:ACE_DB_PASSWORD

[database_brocess]
hostname = ace-db
unix_socket =
database = brocess-unittest
username = ace-user
password = env:ACE_DB_PASSWORD

[database_email_archive]
hostname = ace-db
unix_socket =
database = email-archive-unittest
username = ace-user
password = env:ACE_DB_PASSWORD

[analysis_module_basic_test]
id = basic_test
module = saq.modules.test
class = BasicTestAnalyzer
enabled = no

[analysis_module_generic_test]
id = generic_test
module = saq.modules.test
class = GenericTestAnalyzer
enabled = no

[analysis_module_configurable_module_test]
id = configurable_module_test
module = saq.modules.test
class = ConfigurableModuleTestAnalyzer
enabled = no

valid_observable_types = ipv4,test
required_directives = archive
required_tags = test

[analysis_module_dependency_test]
id = dependency_test
module = saq.modules.test
class = DependencyTestAnalyzer
enabled = no

[analysis_module_test_delayed_analysis]
id = delayed_analysis
module = saq.modules.test
class = DelayedAnalysisTestModule
enabled = no

[analysis_module_test_delayed_analysis_instance]
id = delayed_analysis_instance
module = saq.modules.test
class = DelayedAnalysisTestModule
enabled = no
instance = instance1

[analysis_module_test_engine_locking]
id = engine_locking_test
module = saq.modules.test
class = EngineLockingTestModule
enabled = no

[analysis_module_test_final_analysis]
id = final_analysis_test
module = saq.modules.test
class = FinalAnalysisTestAnalyzer
enabled = no

[analysis_module_test_post_analysis]
id = post_analysis_test
module = saq.modules.test
class = PostAnalysisTest
enabled = no

[analysis_module_test_delayed_analysis_timeout]
id = delayed_analysis_timeout_test
module = saq.modules.test
class = DelayedAnalysisTimeoutTest
enabled = no

[analysis_module_test_wait_a]
id = wait_a_test
module = saq.modules.test
class = WaitAnalyzerModule_A
enabled = no
priority = 9

[analysis_module_test_wait_a_instance]
id = wait_a_test_instance
module = saq.modules.test
class = WaitAnalyzerModule_A
enabled = no
instance = instance1
priority = 9

[analysis_module_test_wait_a_instance_2]
id = wait_a_test_instance_2
module = saq.modules.test
class = WaitAnalyzerModule_A
enabled = no
instance = instance2

[analysis_module_test_wait_b]
id = wait_b_test
module = saq.modules.test
class = WaitAnalyzerModule_B
enabled = no

[analysis_module_test_wait_b_instance]
id = wait_b_test_instance
module = saq.modules.test
class = WaitAnalyzerModule_B
enabled = no
instance = instance1

[analysis_module_test_wait_c]
id = wait_c_test
module = saq.modules.test
class = WaitAnalyzerModule_C
enabled = no

[analysis_module_merge_test]
id = merge_test
module = saq.modules.test
class = MergeTestAnalyzer
enabled = no

[analysis_module_threaded_test]
id = threaded_test
module = saq.modules.test
class = ThreadedModuleTest
enabled = no
threaded = yes
threaded_execution_frequency = 1

[analysis_module_threaded_test_broken]
id = threaded_test_broken
module = saq.modules.test
class = BrokenThreadedModuleTest
enabled = no
threaded = yes
threaded_execution_frequency = 1

[analysis_module_cloudphish_delayed_test]
id = cloudphish_delayed_test
module = saq.modules.test
class = CloudphishDelayedTestAnalyzer
enabled = no

[analysis_module_forced_detection]
id = forced_detection_test
module = saq.modules.test
class = ForcedDetectionTestAnalyzer
enabled = no

[analysis_module_low_priority]
id = low_priority_test
module = saq.modules.test
class = LowPriorityAnalyzer
enabled = no
priority = 20

[analysis_module_high_priority]
id = high_priority_test
module = saq.modules.test
class = HighPriorityAnalyzer
enabled = no
priority = 0

[analysis_module_generate_file]
id = generate_file_test
module = saq.modules.test
class = GenerateFileAnalyzer
enabled = no
priority = 0

[analysis_module_no_priority]
id = no_priority_test
module = saq.modules.test
class = NoPriorityAnalyzer
enabled = no

[analysis_module_test_file_size_limit]
id = file_size_limit_test
module = saq.modules.test
class = FileSizeLimitAnalyzer
enabled = no
file_size_limit = 2

[analysis_module_post_analysis_multi_mode]
id = post_analysis_multi_mode_test
module = saq.modules.test
class = PostAnalysisMultiModeTest
enabled = no

[analysis_module_grouped_time_range]
id = grouped_time_range_test
module = saq.modules.test
class = GroupedByTimeRangeAnalyzer
enabled = no
observation_grouping_time_range = 00:10:00

[analysis_module_grouping_target]
id = grouping_target_test
module = saq.modules.test
class = GroupingTargetAnalyzer
enabled = no
observation_grouping_time_range = 00:10:00

[analysis_module_pause]
id = pause_test
module = saq.modules.test
class = PauseAnalyzer
enabled = no

[analysis_module_instance_1]
id = instance_1_test
module = saq.modules.test
class = TestInstanceAnalyzer
instance = instance1
enabled = no

sql = SELECT * FROM whatever

[analysis_module_instance_2]
id = instance_2_test
module = saq.modules.test
class = TestInstanceAnalyzer
instance = instance2
enabled = no

sql = SELECT * FROM thatonething

[analysis_module_analysis_cache_test]
id = analysis_cache_test
module = saq.modules.test
class = CacheTestAnalyzer
enabled = no
cache = yes

[analysis_module_valid_queues_test]
id = valid_queues_test
module = saq.modules.test
class = ValidQueueAnalyzer
enabled = no
valid_queues = test

[analysis_module_invalid_queues_test]
id = invalid_queues_test
module = saq.modules.test
class = InvalidQueueAnalyzer
enabled = no
invalid_queues = test

[analysis_module_bad_summary_test]
id = bad_summary_test
module = saq.modules.test
class = BadSummaryTestAnalyzer
enabled = no

[analysis_module_netbios_analyzer]
enabled = yes
ssh_host = 

[analysis_module_dns_analyzer]
ssh_host =

[analysis_module_cloudphish]
cloudphish.1 = localhost:24443

[analysis_module_crawlphish]
whitelist_path = etc/unittest_crawlphish.whitelist
regex_path = etc/unittest_crawlphish.path_regex
blacklist_path = etc/unittest_crawlphish.blacklist
proxies = GLOBAL

[analysis_module_api_analysis_test]
id = api_analysis_test
module = tests.saq.test_api_analysis
class = StubAPIAnalyzer
enabled = yes
api = analysis_module_api_analysis_test
instance = TestAPIAnalyzer
wide_duration_before = 03:00:00:00
wide_duration_after = 00:30:00
narrow_duration_before = 01:00:00
narrow_duration_after = 01:00:00
max_result_count = 10
query_timeout = 3

question = Does this module work?
summary = This will let us know if this module working.
query = SELECT * FROM items WHERE type = <O_VALUE> and time > <O_START> and time < <O_STOP>

map_any = color = any

[analysis_module_api_analysis_multi_value_test]
id = api_analysis_multi_value_test
module = tests.saq.test_api_analysis
class = StubAPIMultiValueAnalyzer
enabled = yes
api = analysis_module_api_analysis_multi_value_test
instance = TestAPIAnalyzer
wide_duration_before = 03:00:00:00
wide_duration_after = 00:30:00
narrow_duration_before = 01:00:00
narrow_duration_after = 01:00:00
max_result_count = 10
query_timeout = 3

question = Does this module work?
summary = This will let us know if this module working.
query = SELECT * FROM items WHERE color = <O_VALUE1> OR color = <O_VALUE2> OR color = <O_VALUE3> and time > <O_START> and time < <O_STOP>

map_any = color = any

[analysis_module_api_analysis_timeout_test]
id = api_analysis_timeout_test
module = tests.saq.test_api_analysis
class = StubAPITimeoutAnalyzer
enabled = yes
api = analysis_module_api_analysis_test
instance = TestAPIAnalyzer
wide_duration_before = 03:00:00:00
wide_duration_after = 00:30:00
narrow_duration_before = 01:00:00
narrow_duration_after = 01:00:00
max_result_count = 10
query_timeout = 0

question = Does this module work?
summary = This will let us know if this module working.
query = SELECT * FROM items WHERE type = <O_VALUE> and time > <O_START> and time < <O_STOP>

map_any = color = any

;[analysis_module_yara_scanner_v3_4]
;base_dir = /opt/saq/yara_scanner

[module_group_unittest]
analysis_module_basic_test = yes
analysis_module_configurable_module_test = yes
analysis_module_dependency_test = yes
analysis_module_generate_file = yes
analysis_module_generic_test = yes
analysis_module_grouped_time_range = yes
analysis_module_grouping_target = yes
analysis_module_high_priority = yes
analysis_module_instance_1 = yes
analysis_module_instance_2 = yes
analysis_module_low_priority = yes
analysis_module_merge_test = yes
analysis_module_no_priority = yes
analysis_module_pause = yes
analysis_module_post_analysis_multi_mode = yes
analysis_module_test_delayed_analysis = yes
analysis_module_test_delayed_analysis_instance = yes
analysis_module_test_delayed_analysis_timeout = yes
analysis_module_test_engine_locking = yes
analysis_module_test_final_analysis = yes
analysis_module_test_post_analysis = yes
analysis_module_test_wait_a = yes
analysis_module_test_wait_a_instance = yes
analysis_module_test_wait_a_instance_2 = yes
analysis_module_test_wait_b = yes
analysis_module_test_wait_b_instance = yes
analysis_module_test_wait_c = yes
analysis_module_threaded_test = yes
analysis_module_threaded_test_broken = yes
analysis_module_bad_summary_test = yes
analysis_module_test_file_size_limit = yes

[module_group_queues]
analysis_module_basic_test = yes
analysis_module_valid_queues_test = yes
analysis_module_invalid_queues_test = yes

[module_group_cache]
analysis_module_analysis_cache_test = yes

[service_network_semaphore]
bind_address = 127.0.0.1
bind_port = 53560
remote_address = 127.0.0.1
remote_port = 53560

[service_email_collector]
enabled = yes
assignment_yara_rule_path = etc/remote_assignments.unittest.yar 

[smtp]
server = localhost
mail_from = ace@localhost

[messaging_system_test]
enabled = True
module = saq.messaging.test
class = TestMessageDispatchSystem
route = test

[message_routing]
test = test:test_destination

[ldap]
ldap_server = localhost
ldap_bind_user = user
ldap_bind_password = password
ldap_base_dn = domain
top_user = theboss

[service_engine]
local_analysis_modes = test_empty,test_single,test_groups,test_disabled,test_cleanup,test_queues,test_cache
default_analysis_mode = test_single
pool_size_limit = 1

[collection_group_default]
enabled = no

[collection_group_unittest]
enabled = yes
coverage = 100
full_delivery = yes
database = ace
company_id = 1
target_nodes = LOCAL

[collection_group_disabled]
enabled = no
coverage = 100
full_delivery = yes
database = ace
company_id = 1

[analysis_mode_test_empty]
cleanup = no
module_groups =

[analysis_mode_test_single]
cleanup = no
module_groups =
analysis_module_basic_test = yes

[analysis_mode_test_groups]
cleanup = no
module_groups = unittest

[analysis_mode_test_disabled]
cleanup = no
module_groups = unittest
analysis_module_basic_test = no

[analysis_mode_test_cleanup]
cleanup = yes
module_groups = 

[analysis_mode_test_queues]
cleanup = no
module_groups = queues

[analysis_mode_test_cache]
cleanup = no
module_groups = cache

[remediator_test]
client_id = test
tenant_id = test
thumbprint = test
private_key = test
server = test
version = test
user = test
pass = test

[settings]
refresh_seconds = 60

[observable_expiration_mappings]
; yes/no to set any observables expires_on value to Null (never expire) if the observable is inside an event
; that has a threat actor assigned to it.
never_expire_with_threat_actor = yes

; Time deltas containing how long an observable has before expiring as a detection point
; format: observable_type = DD:HH:MM:SS
;
; If you want the observable type to never expire, simply remove it from this config section. Otherwise,
; every observable type defined here must have a time delta assigned to it.
;
ipv4 = 14:00:00:00

[shodan]
api_key = test

[apikeys]
# value is dcef0db0-556f-44b3-9e1b-3d97b435d264
test = 46db99d06ab943eca3213089137fd6265b74df1e17bc201327db8b547be1c2b9

[service_remediation]
unchecked_types = 

[analysis_module_splunk_api]
module = saq.modules.splunk
class = SplunkAPIAnalyzer
api = test_api
query = index=test
wide_duration_before = 0
wide_duration_after = 0
narrow_duration_before = 0
narrow_duration_after = 0
max_result_count = 1
query_timeout = 1
async_delay = 1
use_index_time = yes

[analysis_module_user_defined_tagging]
priority = 1

[test_api]
timezone = UTC
uri = https://www.test.com
username = user
password = pass
